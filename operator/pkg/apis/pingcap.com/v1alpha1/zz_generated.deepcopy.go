// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinlogEventRule) DeepCopyInto(out *BinlogEventRule) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]EventType, len(*in))
		copy(*out, *in)
	}
	if in.SQLPattern != nil {
		in, out := &in.SQLPattern, &out.SQLPattern
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinlogEventRule.
func (in *BinlogEventRule) DeepCopy() *BinlogEventRule {
	if in == nil {
		return nil
	}
	out := new(BinlogEventRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerSpec) DeepCopyInto(out *ContainerSpec) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(ResourceRequirement)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(ResourceRequirement)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerSpec.
func (in *ContainerSpec) DeepCopy() *ContainerSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBConfig) DeepCopyInto(out *DBConfig) {
	*out = *in
	out.DMDB = in.DMDB
	if in.MaxAllowedPacket != nil {
		in, out := &in.MaxAllowedPacket, &out.MaxAllowedPacket
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBConfig.
func (in *DBConfig) DeepCopy() *DBConfig {
	if in == nil {
		return nil
	}
	out := new(DBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMDB) DeepCopyInto(out *DMDB) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMDB.
func (in *DMDB) DeepCopy() *DMDB {
	if in == nil {
		return nil
	}
	out := new(DMDB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMasterConfig) DeepCopyInto(out *DMMasterConfig) {
	*out = *in
	if in.Deploy != nil {
		in, out := &in.Deploy, &out.Deploy
		*out = make([]*DeployMapper, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DeployMapper)
				**out = **in
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMasterConfig.
func (in *DMMasterConfig) DeepCopy() *DMMasterConfig {
	if in == nil {
		return nil
	}
	out := new(DMMasterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMeta) DeepCopyInto(out *DMMeta) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMeta.
func (in *DMMeta) DeepCopy() *DMMeta {
	if in == nil {
		return nil
	}
	out := new(DMMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMMeta) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMetaList) DeepCopyInto(out *DMMetaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DMMeta, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMetaList.
func (in *DMMetaList) DeepCopy() *DMMetaList {
	if in == nil {
		return nil
	}
	out := new(DMMetaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMMetaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMetaSpec) DeepCopyInto(out *DMMetaSpec) {
	*out = *in
	out.Mysql = in.Mysql
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMetaSpec.
func (in *DMMetaSpec) DeepCopy() *DMMetaSpec {
	if in == nil {
		return nil
	}
	out := new(DMMetaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMNode) DeepCopyInto(out *DMNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMNode.
func (in *DMNode) DeepCopy() *DMNode {
	if in == nil {
		return nil
	}
	out := new(DMNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMNodeList) DeepCopyInto(out *DMNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DMNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMNodeList.
func (in *DMNodeList) DeepCopy() *DMNodeList {
	if in == nil {
		return nil
	}
	out := new(DMNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMNodeService) DeepCopyInto(out *DMNodeService) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMNodeService.
func (in *DMNodeService) DeepCopy() *DMNodeService {
	if in == nil {
		return nil
	}
	out := new(DMNodeService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMNodeSpec) DeepCopyInto(out *DMNodeSpec) {
	*out = *in
	in.ContainerSpec.DeepCopyInto(&out.ContainerSpec)
	in.Service.DeepCopyInto(&out.Service)
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Source.DeepCopyInto(&out.Source)
	in.NodeConfig.DeepCopyInto(&out.NodeConfig)
	in.MasterConfig.DeepCopyInto(&out.MasterConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMNodeSpec.
func (in *DMNodeSpec) DeepCopy() *DMNodeSpec {
	if in == nil {
		return nil
	}
	out := new(DMNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMNodeStatus) DeepCopyInto(out *DMNodeStatus) {
	*out = *in
	in.StatefulSet.DeepCopyInto(&out.StatefulSet)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMNodeStatus.
func (in *DMNodeStatus) DeepCopy() *DMNodeStatus {
	if in == nil {
		return nil
	}
	out := new(DMNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMPurger) DeepCopyInto(out *DMPurger) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMPurger.
func (in *DMPurger) DeepCopy() *DMPurger {
	if in == nil {
		return nil
	}
	out := new(DMPurger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMSource) DeepCopyInto(out *DMSource) {
	*out = *in
	in.DBConfig.DeepCopyInto(&out.DBConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMSource.
func (in *DMSource) DeepCopy() *DMSource {
	if in == nil {
		return nil
	}
	out := new(DMSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTask) DeepCopyInto(out *DMTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTask.
func (in *DMTask) DeepCopy() *DMTask {
	if in == nil {
		return nil
	}
	out := new(DMTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTaskConfig) DeepCopyInto(out *DMTaskConfig) {
	*out = *in
	if in.IgnoreCheckingItems != nil {
		in, out := &in.IgnoreCheckingItems, &out.IgnoreCheckingItems
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetDB != nil {
		in, out := &in.TargetDB, &out.TargetDB
		*out = new(DBConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLInstances != nil {
		in, out := &in.MySQLInstances, &out.MySQLInstances
		*out = make([]*MySQLInstance, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MySQLInstance)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make(map[string]*TableRule, len(*in))
		for key, val := range *in {
			var outVal *TableRule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(TableRule)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make(map[string]*BinlogEventRule, len(*in))
		for key, val := range *in {
			var outVal *BinlogEventRule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(BinlogEventRule)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.ColumnMappings != nil {
		in, out := &in.ColumnMappings, &out.ColumnMappings
		*out = make(map[string]*Rule, len(*in))
		for key, val := range *in {
			var outVal *Rule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Rule)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.BWList != nil {
		in, out := &in.BWList, &out.BWList
		*out = make(map[string]*Rules, len(*in))
		for key, val := range *in {
			var outVal *Rules
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Rules)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Mydumpers != nil {
		in, out := &in.Mydumpers, &out.Mydumpers
		*out = make(map[string]*MydumperConfig, len(*in))
		for key, val := range *in {
			var outVal *MydumperConfig
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(MydumperConfig)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Loaders != nil {
		in, out := &in.Loaders, &out.Loaders
		*out = make(map[string]*LoaderConfig, len(*in))
		for key, val := range *in {
			var outVal *LoaderConfig
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(LoaderConfig)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Syncers != nil {
		in, out := &in.Syncers, &out.Syncers
		*out = make(map[string]*SyncerConfig, len(*in))
		for key, val := range *in {
			var outVal *SyncerConfig
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(SyncerConfig)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTaskConfig.
func (in *DMTaskConfig) DeepCopy() *DMTaskConfig {
	if in == nil {
		return nil
	}
	out := new(DMTaskConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTaskList) DeepCopyInto(out *DMTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DMTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTaskList.
func (in *DMTaskList) DeepCopy() *DMTaskList {
	if in == nil {
		return nil
	}
	out := new(DMTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTaskSpec) DeepCopyInto(out *DMTaskSpec) {
	*out = *in
	in.Task.DeepCopyInto(&out.Task)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTaskSpec.
func (in *DMTaskSpec) DeepCopy() *DMTaskSpec {
	if in == nil {
		return nil
	}
	out := new(DMTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTaskStatus) DeepCopyInto(out *DMTaskStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTaskStatus.
func (in *DMTaskStatus) DeepCopy() *DMTaskStatus {
	if in == nil {
		return nil
	}
	out := new(DMTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMTracer) DeepCopyInto(out *DMTracer) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMTracer.
func (in *DMTracer) DeepCopy() *DMTracer {
	if in == nil {
		return nil
	}
	out := new(DMTracer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMWorkerConfig) DeepCopyInto(out *DMWorkerConfig) {
	*out = *in
	in.From.DeepCopyInto(&out.From)
	out.Purge = in.Purge
	out.Tracer = in.Tracer
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMWorkerConfig.
func (in *DMWorkerConfig) DeepCopy() *DMWorkerConfig {
	if in == nil {
		return nil
	}
	out := new(DMWorkerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployMapper) DeepCopyInto(out *DeployMapper) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployMapper.
func (in *DeployMapper) DeepCopy() *DeployMapper {
	if in == nil {
		return nil
	}
	out := new(DeployMapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoaderConfig) DeepCopyInto(out *LoaderConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoaderConfig.
func (in *LoaderConfig) DeepCopy() *LoaderConfig {
	if in == nil {
		return nil
	}
	out := new(LoaderConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Meta) DeepCopyInto(out *Meta) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Meta.
func (in *Meta) DeepCopy() *Meta {
	if in == nil {
		return nil
	}
	out := new(Meta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLInstance) DeepCopyInto(out *MySQLInstance) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(Meta)
		**out = **in
	}
	if in.FilterRules != nil {
		in, out := &in.FilterRules, &out.FilterRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ColumnMappingRules != nil {
		in, out := &in.ColumnMappingRules, &out.ColumnMappingRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Mydumper != nil {
		in, out := &in.Mydumper, &out.Mydumper
		*out = new(MydumperConfig)
		**out = **in
	}
	if in.Loader != nil {
		in, out := &in.Loader, &out.Loader
		*out = new(LoaderConfig)
		**out = **in
	}
	if in.Syncer != nil {
		in, out := &in.Syncer, &out.Syncer
		*out = new(SyncerConfig)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLInstance.
func (in *MySQLInstance) DeepCopy() *MySQLInstance {
	if in == nil {
		return nil
	}
	out := new(MySQLInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MydumperConfig) DeepCopyInto(out *MydumperConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MydumperConfig.
func (in *MydumperConfig) DeepCopy() *MydumperConfig {
	if in == nil {
		return nil
	}
	out := new(MydumperConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRequirement) DeepCopyInto(out *ResourceRequirement) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRequirement.
func (in *ResourceRequirement) DeepCopy() *ResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(ResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rules) DeepCopyInto(out *Rules) {
	*out = *in
	if in.DoTables != nil {
		in, out := &in.DoTables, &out.DoTables
		*out = make([]*Table, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Table)
				**out = **in
			}
		}
	}
	if in.DoDBs != nil {
		in, out := &in.DoDBs, &out.DoDBs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IgnoreTables != nil {
		in, out := &in.IgnoreTables, &out.IgnoreTables
		*out = make([]*Table, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Table)
				**out = **in
			}
		}
	}
	if in.IgnoreDBs != nil {
		in, out := &in.IgnoreDBs, &out.IgnoreDBs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rules.
func (in *Rules) DeepCopy() *Rules {
	if in == nil {
		return nil
	}
	out := new(Rules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncerConfig) DeepCopyInto(out *SyncerConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncerConfig.
func (in *SyncerConfig) DeepCopy() *SyncerConfig {
	if in == nil {
		return nil
	}
	out := new(SyncerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableRule) DeepCopyInto(out *TableRule) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableRule.
func (in *TableRule) DeepCopy() *TableRule {
	if in == nil {
		return nil
	}
	out := new(TableRule)
	in.DeepCopyInto(out)
	return out
}
